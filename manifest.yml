apiVersion: v1
kind: Namespace
metadata:
  name: mongo
  namespace: mongo

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: mongo    
  labels:
    app: my-mongodb
    env: test
spec: 
  selector:
    matchLabels:
      app: mongodb
  replicas: 1
  template:  
    metadata:
      labels:
        app: mongodb
    spec:
      containers: 
        - name: mongo
          image: mongo:4.0.9
          command:
            - mongod
            - "--bind_ip"
            - "0.0.0.0"
          imagePullPolicy: Always
          ports:
            - containerPort: 27017
              name: mongo
              hostPort: 27017
              protocol: TCP
          volumeMounts:
              - mountPath: /data/db
                name: mongodb-volume
      volumes:
        - name: mongodb-volume
          hostPath:
            path: /home/mongodb 
    

---

apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: mongo
spec:
  selector:
    app: mongodb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017    

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-configmap
  namespace: mongo
data:
  database_url: mongodb-service

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: angular-webapp
  name: angular-webapp
  namespace: mongo
spec:
  replicas: 5
  selector:
    matchLabels:
      app: angular-webapp
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: angular-webapp
    spec:
      containers:
      - image: docker.io/andraide/testtwo
        name: webapp
        imagePullPolicy: Always
        resources: {}
        ports:
          - containerPort: 8080 
       
status: {}

---

apiVersion: v1
kind: Service
metadata:
  name: angular-webapp
  namespace: mongo
  labels:
    run: angular-webapp
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    app: angular-webapp
  type: NodePort

---


